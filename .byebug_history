continue
threshold.format
threshold
total
@unit
continue
total
unit
continue
total
continue
unit
total
continue
promo_sum
next
promo_sum
next
total
next
promotion_scalar
total
next
total
total_item_cost
next
price
item_count
price
next
items
total / Money.new(100, "GBP")items
continue
total / Money.new(100, "GBP")
total / Money.new(010, "GBP")
total / Money.new(10, "GBP")
total / Money.new(10)
total.amount
74.20.to_money
total.inspect
money.inspect
total
total.cents / 100
total.cents /100
total.pence
total.cents
total / 100.0
total / 100
total
((total / 100) * 10.00)
total
continue
total
continue
promotion.apply(@items, promo_sum)
continue
sum
next
sum
continue
sum.format
sum.price
sum
continue
items.each { |item| sum + item.price }
items.select { |item| sum + item.price }
items.first
continue
total
continue
total_item_cost.format
total_item_cost
total.format
total
next
total
total - total_item_cost
total
next
continue
total
next
total
total_item_cost
next
continue
total - (price * item_count)
price * item_count
item_count
total
price * 3
price
next
price
continue
total
continue
total.format
total
next
total
next
price
next
total
continue
total.amount
total
continue
total.class
total
continue
next
total
price
next
item_count
continue
type
unit
continue
"more_than_60".gsub(/[^\d]/, '')
type.gsub(/[^\d]/, '')
type..gsub(/[^\d]/, '')
type
continue
type.slice(0, type.length-2)
type.slice(1, type.length-2)
type.slice(0, type.length-2)
type.slice(0, type.length-1)
type
continue
unit
continue
product_price.display
continue
product.product_code.to_i
product.product_code
continue
product.product_code.to_i
product.product_code
continue
product.product_code
product.inspect
continue
expected_total_price.display
expected_total_price.to_s
expected_total_price.display
continue
expected_total_price.to_s
expected_total_price.display
continue
expected_total_price.to_s
expected_total_price.display
continue
expected_total_price.display
expected_total_price.to_s
expected_total_price.round_to_nearest_cash_value
expected_total_price.currency_as_string
expected_total_price.amount.currency_as_string
expected_total_price.amount
expected_total_price.methods
expected_total_price
